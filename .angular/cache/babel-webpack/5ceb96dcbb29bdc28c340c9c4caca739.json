{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst _c0 = function (a1, a2) {\n  return {\n    \"p-button-icon\": true,\n    \"p-button-icon-left\": a1,\n    \"p-button-icon-right\": a2\n  };\n};\n\nfunction ToggleButton_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.checked ? ctx_r0.onIcon : ctx_r0.offIcon);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, ctx_r0.iconPos === \"left\", ctx_r0.iconPos === \"right\"));\n  }\n}\n\nconst _c1 = function (a1, a2, a3) {\n  return {\n    \"p-button p-togglebutton p-component\": true,\n    \"p-button-icon-only\": a1,\n    \"p-highlight\": a2,\n    \"p-disabled\": a3\n  };\n};\n\nconst TOGGLEBUTTON_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n\nclass ToggleButton {\n  constructor(cd) {\n    this.cd = cd;\n    this.iconPos = 'left';\n    this.onChange = new EventEmitter();\n    this.checked = false;\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n  }\n\n  toggle(event) {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.onModelChange(this.checked);\n      this.onModelTouched();\n      this.onChange.emit({\n        originalEvent: event,\n        checked: this.checked\n      });\n      this.cd.markForCheck();\n    }\n  }\n\n  onBlur() {\n    this.onModelTouched();\n  }\n\n  writeValue(value) {\n    this.checked = value;\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  get hasOnLabel() {\n    return this.onLabel && this.onLabel.length > 0;\n  }\n\n  get hasOffLabel() {\n    return this.onLabel && this.onLabel.length > 0;\n  }\n\n}\n\nToggleButton.ɵfac = function ToggleButton_Factory(t) {\n  return new (t || ToggleButton)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nToggleButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToggleButton,\n  selectors: [[\"p-toggleButton\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    onLabel: \"onLabel\",\n    offLabel: \"offLabel\",\n    onIcon: \"onIcon\",\n    offIcon: \"offIcon\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    disabled: \"disabled\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    inputId: \"inputId\",\n    tabindex: \"tabindex\",\n    iconPos: \"iconPos\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([TOGGLEBUTTON_VALUE_ACCESSOR])],\n  decls: 4,\n  vars: 12,\n  consts: [[\"role\", \"checkbox\", \"pRipple\", \"\", 3, \"ngClass\", \"ngStyle\", \"click\", \"keydown.enter\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [1, \"p-button-label\"], [3, \"ngClass\"]],\n  template: function ToggleButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function ToggleButton_Template_div_click_0_listener($event) {\n        return ctx.toggle($event);\n      })(\"keydown.enter\", function ToggleButton_Template_div_keydown_enter_0_listener($event) {\n        return ctx.toggle($event);\n      });\n      i0.ɵɵtemplate(1, ToggleButton_span_1_Template, 1, 6, \"span\", 1);\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(8, _c1, ctx.onIcon && ctx.offIcon && !ctx.hasOnLabel && !ctx.hasOffLabel, ctx.checked, ctx.disabled))(\"ngStyle\", ctx.style);\n      i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : \"0\")(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.onIcon || ctx.offIcon);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.checked ? ctx.hasOnLabel ? ctx.onLabel : \"\" : ctx.hasOffLabel ? ctx.offLabel : \"\");\n    }\n  },\n  directives: [i1.Ripple, i2.NgClass, i2.NgStyle, i2.NgIf],\n  styles: [\".p-button[_ngcontent-%COMP%]{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label[_ngcontent-%COMP%]{flex:1 1 auto}.p-button-icon-right[_ngcontent-%COMP%]{order:1}.p-button[_ngcontent-%COMP%]:disabled{cursor:default}.p-button-icon-only[_ngcontent-%COMP%]{justify-content:center}.p-button-icon-only[_ngcontent-%COMP%]   .p-button-label[_ngcontent-%COMP%]{visibility:hidden;width:0;flex:0 0 auto}.p-button-vertical[_ngcontent-%COMP%]{flex-direction:column}.p-button-icon-bottom[_ngcontent-%COMP%]{order:2}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]{margin:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:last-child){border-right:0 none}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:focus{position:relative;z-index:1}.p-button-label[_ngcontent-%COMP%]{transition:all .2s}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-toggleButton',\n      template: `\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\"\n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\"\n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    `,\n      providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'p-element'\n      },\n      styles: [\".p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default}.p-button-icon-only{justify-content:center}.p-button-icon-only .p-button-label{visibility:hidden;width:0;flex:0 0 auto}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}.p-button-label{transition:all .2s}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    onLabel: [{\n      type: Input\n    }],\n    offLabel: [{\n      type: Input\n    }],\n    onIcon: [{\n      type: Input\n    }],\n    offIcon: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ToggleButtonModule {}\n\nToggleButtonModule.ɵfac = function ToggleButtonModule_Factory(t) {\n  return new (t || ToggleButtonModule)();\n};\n\nToggleButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToggleButtonModule\n});\nToggleButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, RippleModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RippleModule],\n      exports: [ToggleButton],\n      declarations: [ToggleButton]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonModule };","map":{"version":3,"sources":["/home/anemoi/Documents/new projects/NewCitCompliance/node_modules/primeng/fesm2020/primeng-togglebutton.mjs"],"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","NgModule","i2","CommonModule","i1","RippleModule","NG_VALUE_ACCESSOR","TOGGLEBUTTON_VALUE_ACCESSOR","provide","useExisting","ToggleButton","multi","constructor","cd","iconPos","onChange","checked","onModelChange","onModelTouched","toggle","event","disabled","emit","originalEvent","markForCheck","onBlur","writeValue","value","registerOnChange","fn","registerOnTouched","setDisabledState","val","hasOnLabel","onLabel","length","hasOffLabel","ɵfac","ChangeDetectorRef","ɵcmp","Ripple","NgClass","NgStyle","NgIf","type","args","selector","template","providers","changeDetection","OnPush","host","styles","offLabel","onIcon","offIcon","ariaLabelledBy","style","styleClass","inputId","tabindex","ToggleButtonModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst TOGGLEBUTTON_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleButton),\n    multi: true\n};\nclass ToggleButton {\n    constructor(cd) {\n        this.cd = cd;\n        this.iconPos = 'left';\n        this.onChange = new EventEmitter();\n        this.checked = false;\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    toggle(event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            this.cd.markForCheck();\n        }\n    }\n    onBlur() {\n        this.onModelTouched();\n    }\n    writeValue(value) {\n        this.checked = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    get hasOnLabel() {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n    get hasOffLabel() {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n}\nToggleButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ToggleButton, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nToggleButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: ToggleButton, selector: \"p-toggleButton\", inputs: { onLabel: \"onLabel\", offLabel: \"offLabel\", onIcon: \"onIcon\", offIcon: \"offIcon\", ariaLabelledBy: \"ariaLabelledBy\", disabled: \"disabled\", style: \"style\", styleClass: \"styleClass\", inputId: \"inputId\", tabindex: \"tabindex\", iconPos: \"iconPos\" }, outputs: { onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [TOGGLEBUTTON_VALUE_ACCESSOR], ngImport: i0, template: `\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\"\n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\"\n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    `, isInline: true, styles: [\".p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default}.p-button-icon-only{justify-content:center}.p-button-icon-only .p-button-label{visibility:hidden;width:0;flex:0 0 auto}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}.p-button-label{transition:all .2s}\\n\"], directives: [{ type: i1.Ripple, selector: \"[pRipple]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ToggleButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-toggleButton', template: `\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\"\n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\"\n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    `, providers: [TOGGLEBUTTON_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'p-element'\n                    }, styles: [\".p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default}.p-button-icon-only{justify-content:center}.p-button-icon-only .p-button-label{visibility:hidden;width:0;flex:0 0 auto}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}.p-button-label{transition:all .2s}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { onLabel: [{\n                type: Input\n            }], offLabel: [{\n                type: Input\n            }], onIcon: [{\n                type: Input\n            }], offIcon: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }] } });\nclass ToggleButtonModule {\n}\nToggleButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ToggleButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToggleButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ToggleButtonModule, declarations: [ToggleButton], imports: [CommonModule, RippleModule], exports: [ToggleButton] });\nToggleButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ToggleButtonModule, imports: [[CommonModule, RippleModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ToggleButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RippleModule],\n                    exports: [ToggleButton],\n                    declarations: [ToggleButton]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonModule };\n"]},"metadata":{},"sourceType":"module"}